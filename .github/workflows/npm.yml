name: Deploy Vue.js to Ubuntu

on:
  push:
    branches:
      - master
    paths:
      - 'package.json'
  pull_request:
    branches:
      - master
    paths:
      - 'package.json'

jobs:

  build:
    runs-on: ubuntu-latest
    environment:
      name: 'production'
    outputs:
      version: ${{ env.version }}
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build application
        run: npm run build
        
      - name: Save artifacts
        uses: actions/upload-artifact@v3
        with:
          name: "dist"
          path: "dist/"
          
      - name: Set version
        id: set_version
        run: |
          version="$(node -p "require('./package.json').version")"
          echo "version=$version" >> $GITHUB_ENV
        
  release:
  
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'production'
          
    steps:
      - name: Get version
        id: get_version
        run: |
          echo "version=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
          
      #- name: Set tag name
        #id: set_tag
        #run: echo "TAG=$(echo ${GITHUB_SHA::8})-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
        
      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #tag: "${{ steps.set_tag.outputs.TAG }}"
          #name: "${{ steps.set_tag.outputs.TAG }}"
          tag: "${{ env.version }}"
          name: "${{ env.version }}"
          body: |
              ${{ github.event.pull_request.body }}
              ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
    
  deploy:
  
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'production'
    
    steps:
      - name: Download Jar Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
          
      #- name: Verify downloaded files
        #run: ls -R
        #working-directory: dist/
      
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          source: dist/
          target: /var/www/html/

      - name: Check if Nginx is running
        run: sudo service nginx status
        continue-on-error: true
        id: nginx-status

      - name: Start or restart Nginx
        run: |
          if [ ${{ steps.nginx-status.outcome }} == 'success' ]; then
            sudo systemctl restart nginx
          else
            sudo systemctl start nginx
          fi
